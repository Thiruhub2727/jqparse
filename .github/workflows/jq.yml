name: Terraform Plan and Apply

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Initialize Terraform
        run: terraform init

      - name: Generate Terraform Plan
        run: terraform plan -out=tfplan

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: tfplan
          retention-days: 7  # Auto-delete after 7 days

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan  # Ensure the plan job runs first
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Initialize Terraform
        run: terraform init

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: .

      - name: Apply Terraform Plan
        run: terraform apply -auto-approve tfplan

      - name: Extract EC2 Instance ID with jq
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances \
            --query 'Reservations[].Instances[].InstanceId' \
            --output json | jq -r '.[0]')
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV

      - name: Print Instance ID
        run: echo "✅ AWS EC2 Instance ID: $INSTANCE_ID"

      - name: Parse Terraform Output with jq
        run: |
          terraform output -json > tf_output.json
          PUBLIC_IP=$(jq -r '.public_ip.value' tf_output.json)
          INSTANCE_TYPE=$(jq -r '.instance_type.value' tf_output.json)

          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV
          echo "INSTANCE_TYPE=$INSTANCE_TYPE" >> $GITHUB_ENV

      - name: Print Terraform Outputs
        run: |
          echo "✅ EC2 Public IP: $PUBLIC_IP"
          echo "✅ EC2 Instance Type: $INSTANCE_TYPE"
